version: '3'

services:
  # databases
  db1:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: wordpresspw_root1
      MYSQL_DATABASE: wordpressdb1
      MYSQL_USER: wordpressuser1
      MYSQL_PASSWORD: wordpresspw1
    volumes:
      - ./db1:/var/lib/mysql
    networks:
      - mynet
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
  db2:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: wordpresspw_root2
      MYSQL_DATABASE: wordpressdb2
      MYSQL_USER: wordpressuser2
      MYSQL_PASSWORD: wordpresspw2
    volumes:
      - ./db2:/var/lib/mysql
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
    networks:
      - mynet

  # wordpress
  store1:
    image: nanoninja/php-fpm:7.1.14
    restart: always
    volumes:
      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "./etc/php/www.conf:/usr/local/etc/php-fpm.d/www.conf"
      - "./store1:/var/www/html/store1"
    depends_on:
      - db1
    ports:
      - "8000:8000"
    environment:
      WORDPRESS_DB_HOST: db1:3306
      WORDPRESS_DB_USER: wordpressuser1
      WORDPRESS_DB_PASSWORD: wordpresspw1
      WORDPRESS_DB_NAME: wordpressdb1
    working_dir: /var/www/html/store1
    networks:
      - mynet
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
  wp2:
    image: wordpress:5-fpm
    restart: always
    depends_on:
      - db2
    environment:
      WORDPRESS_DB_HOST: db2:3306
      WORDPRESS_DB_USER: wordpressuser2
      WORDPRESS_DB_PASSWORD: wordpresspw2
      WORDPRESS_DB_NAME: wordpressdb2
    working_dir: /var/www/html/wp2
    volumes:
      - ./php-uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./wp2:/var/www/html/wp2
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
    networks:
      - mynet

  # nginx
  web:
    image: nginx
    depends_on:
      - store1
      - wp2
    restart: always
    volumes:
      ## for development only
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./includes:/etc/nginx/includes/
      - ./backend-not-found.html:/var/www/html/backend-not-found.html
      - ./logs:/var/log/nginx
      - ./store1:/var/www/html/store1
      - ./wp2:/var/www/html/wp2
    ports:
      ## for development only
      - 80:80
      - 443:443
      #- 8000:8000
      #- 8001:8001
    networks:
      - mynet
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
  
  # visualizer
  visualizer:
    image: dockersamples/visualizer
    deploy:
      placement:
        constraints:
          - node.role == manager
    ## NOTE: you may want to add more security features to prevent easy access on production
    ports:
      - 9999:8080
networks:
  mynet:
    external: true
