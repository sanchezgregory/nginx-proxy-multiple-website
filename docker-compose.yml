version: '3'

networks:
  dockernet:
    external: true

services:
  # nginx
  web:
    image: nginx
    depends_on:
      - mysqldb
      - store_icbc
    restart: always
    volumes:
      - ./etc/ssl:/etc/ssl
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./includes:/etc/nginx/includes/
      - ./backend-not-found.html:/var/www/html/backend-not-found.html
      - ./logs:/var/log/nginx
      - ./www_icbc:/var/www/html/www_icbc
    ports:
      ## for development only
      - 80:80
      - 443:443
    networks:
      - dockernet
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
  # visualizer
  visualizer:
    image: dockersamples/visualizer
    deploy:
      placement:
        constraints:
          - node.role == manager
    ## NOTE: you may want to add more security features to prevent easy access on production
    ports:
      - 9999:8080
  # databases
  mysqldb:
    image: mysql:5.7
    restart: always
    ports:
      - 3000:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: stores
      MYSQL_PASSWORD: stores
    volumes:
      - ./mysqldb:/var/lib/mysql
    networks:
      - dockernet
  # Proyects  
  store_icbc:
    image: nanoninja/php-fpm:7.1.14
    restart: always
    volumes:
      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "./etc/php/www.conf:/usr/local/etc/php-fpm.d/www.conf"
      - "./www_icbc:/var/www/html/www_icbc"
    depends_on:
      - mysqldb
    working_dir: /var/www/html/www_icbc
    networks:
      - dockernet